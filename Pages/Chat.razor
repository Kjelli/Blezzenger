@page "/chat"

@using Blezzenger.ViewModels;
@using Blezzenger.Components;

@inject ChatViewModel _vm

@if (_vm.IsAuthenticated == true && _vm.HasLoadedMessages)
{
    <div id="chat-container">
        <div class="ui fluid grid">
            @foreach (var message in _vm.Messages)
            {
                <MessageComponent Message="message" />
            }
        </div>
    </div>

    <div class="ui fluid segment" style="position: fixed; width: inherit; bottom: 0;">
        <form class="ui form" @onsubmit="_vm.SendMessage">
            <div class="field">
                <div class="ui text input">
                    <input type="text" placeholder="Send a message..." @bind="_vm.MessageInput" />
                </div>
            </div>
        </form>
    </div>
}
else if (_vm.IsAuthenticated == false)
{
    <div class="ui middle aligned center aligned full-height grid">
        <div class="row">
            <div class="four wide column">
                <h1>Log in to use the chat</h1>
                <form class="ui form" @onsubmit="_vm.SelectedUsername">
                    <div class="field">
                        <div class="ui text input">
                            <input type="text" @bind="_vm.UsernameInput" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
}
else
{
    <div class="ui middle aligned center aligned full-height grid">
        <div class="row">
            <div class="column">
                <div class="ui active centered inline loader"></div>
            </div>
        </div>
    </div>
}

@code{
    protected override void OnInitialized()
    {
        _vm.OnChange += () => StateHasChanged();
        _vm.OnInitialized();
        StateHasChanged();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        _vm.OnAfterRender(firstRender);
    }
}
